{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/chat/index.js","views/apps/chat/ChatSidebar.js","views/apps/chat/ChatLog.js","views/apps/chat/receiverProfile.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js"],"names":["propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","children","node","type","size","number","bsSize","valid","invalid","plaintext","addon","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","row","check","inline","disabled","FormGroup","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","componentDidMount","isIos","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","innerWidth","min","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarClassName","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","getChats","dispatch","axios","get","then","response","contacts","data","chats","catch","err","console","log","ChatSidebar","chatsContacts","messages","status","value","getChatContents","getContactChats","handleOnChange","e","searchContacts","chat","chatContacts","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","markSeenAllMessages","mainSidebar","src","photoURL","alt","displayName","height","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","pill","handleUserSidebar","userImg","placeholder","onChange","options","wheelPropagation","connect","chatApp","query","post","contactId","ChatLog","activeUser","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","handleReceiverSidebar","togglePinned","stroke","el","onSubmit","preventDefault","Button","newMsg","toString","message","ReceiverProfile","receiverProfile","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","matchMedia","Chat","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","mediaQueryChanged","addListener","removeListener","Consumer","context","direction"],"mappings":"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","file":"static/js/22.d23c518f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n","import React from \"react\"\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\nimport { X, Search } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n} from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.chat.chatContacts.length !== state.chatContacts ||\n      props.chat.contacts.length !== state.contacts ||\n      props.chat.chats.length !== state.chats ||\n      props.chat.status !== state.status\n    ) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    chatsContacts: [],\n    contacts: [],\n    messages: [],\n    status: null,\n    value: \"\"\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n\n  async componentDidMount() {\n    await this.getChatContents()\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    const { contacts, chatsContacts, chats, status, value } = this.state\n    const contactsArr = value.length\n      ? this.props.chat.filteredContacts\n      : contacts\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n    let renderContacts =\n      contactsArr.length > 0\n        ? contactsArr.map(contact => (\n            <li\n              key={contact.uid}\n              onClick={() => {\n                this.props.handleActiveChat(\n                  contact.uid,\n                  contact,\n                  chats[contact.uid]\n                )\n                this.props.markSeenAllMessages(contact.uid)\n                this.props.mainSidebar(false)\n              }}\n            >\n              <div className=\"pr-1\">\n                <span className=\"avatar avatar-md m-0\">\n                  <img\n                    src={contact.photoURL}\n                    alt={contact.displayName}\n                    height=\"38\"\n                    width=\"38\"\n                  />\n                </span>\n              </div>\n              <div className=\"user-chat-info\">\n                <div className=\"contact-info\">\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\n                  <p className=\"truncate\">{contact.about}</p>\n                </div>\n              </div>\n            </li>\n          ))\n        : null\n    let renderChats =\n      chatsArr && Array.isArray(chatsArr)\n        ? chatsArr.map(chat => {\n            let lastMsg =\n                chats[chat.uid] && chats[chat.uid].msg\n                  ? chats[chat.uid].msg.slice(-1)[0]\n                  : null,\n              lastMsgDate = new Date(\n                lastMsg && lastMsg.time ? lastMsg.time : null\n              ),\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n                month: \"short\"\n              }),\n              lastMsgDay = lastMsgDate.getDate()\n            let pendingMsg =\n              chats[chat.uid] && chats[chat.uid].msg\n                ? chats[chat.uid].msg.filter(\n                    i => i.isSeen === false && i.isSent !== true\n                  ).length\n                : null\n            let activeID =\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\n            return (\n              <li\n                key={chat.uid}\n                onClick={() => {\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\n                  this.props.mainSidebar(false)\n                  this.props.markSeenAllMessages(chat.uid)\n                }}\n                className={`${\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\n                }`}\n              >\n                <div className=\"pr-1\">\n                  <span className=\"avatar avatar-md m-0\">\n                    <img\n                      src={chat.photoURL}\n                      alt={chat.displayName}\n                      height=\"38\"\n                      width=\"38\"\n                    />\n                  </span>\n                </div>\n                <div className=\"user-chat-info\">\n                  <div className=\"contact-info\">\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\n                    <p className=\"truncate\">\n                      {lastMsg ? lastMsg.textContent : chat.about}\n                    </p>\n                  </div>\n                  <div className=\"contact-meta d-flex- flex-column\">\n                    <span className=\"float-right mb-25\">\n                      {lastMsgMonth + \" \" + lastMsgDay}\n                    </span>\n                    {pendingMsg > 0 ? (\n                      <div className=\"unseen-msg\">\n                        <Badge\n                          className=\"badge-md float-right\"\n                          color=\"primary\"\n                          pill\n                        >\n                          {pendingMsg}\n                        </Badge>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            )\n          })\n        : null\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n                onClick={() => this.props.handleUserSidebar(\"open\")}\n              >\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                <span\n                  className={\n                    status === \"dnd\"\n                      ? \"avatar-status-busy\"\n                      : status === \"away\"\n                      ? \"avatar-status-away\"\n                      : status === \"offline\"\n                      ? \"avatar-status-offline\"\n                      : \"avatar-status-online\"\n                  }\n                />\n              </div>\n            </div>\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={e => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">\n            {renderContacts}\n          </ul>\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatLog extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.activeUser !== state.activeChat ||\n      props.activeChat !== state.activeChat\n    ) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    msg: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n\n  render() {\n    const { activeUser } = this.state\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n      activeChat =\n        activeUser && activeUser.uid\n          ? this.props.chat.chats[activeUserUid]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n            let renderSentTime = () => {\n              if (\n                i > 0 &&\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n              ) {\n                return (\n                  <div className=\"divider\">\n                    <div className=\"divider-text\">\n                      {new Date().getDate() +\n                        \" \" +\n                        new Date().toLocaleString(\"default\", {\n                          month: \"short\"\n                        })}\n                    </div>\n                  </div>\n                )\n              }\n            }\n            let renderAvatar = () => {\n              if (i > 0) {\n                if (\n                  chat.isSent === true &&\n                  activeChat.msg[i - 1].isSent !== true\n                ) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={userImg}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else if (chat.isSent !== true) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={activeUser.photoURL}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return \"\"\n                }\n              } else {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.isSent ? userImg : activeUser.photoURL}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              }\n            }\n            return (\n              <React.Fragment key={i}>\n                {renderSentTime()}\n                <div\n                  className={`chat ${\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                  {renderAvatar()}\n                  <div className=\"chat-body\">\n                    <div className=\"chat-content\">{chat.textContent}</div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${\n              activeUser !== null ? \"d-none\" : \"d-flex\"\n            }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${\n              activeUser === null ? \"d-none\" : \"d-block\"\n            }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${\n                      activeUser !== null &&\n                      activeUser.status === \"do not disturb\"\n                        ? \"avatar-status-busy\"\n                        : activeUser !== null && activeUser.status === \"away\"\n                        ? \"avatar-status-away\"\n                        : activeUser !== null && activeUser.status === \"offline\"\n                        ? \"avatar-status-offline\"\n                        : \"avatar-status-online\"\n                    }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser.uid,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser.uid,\n                    false,\n                    this.state.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\">\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n","import React from \"react\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nclass ReceiverProfile extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeUser !== state.activeUser) {\n      return {\n        activeUser: props.activeUser\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    activeUser: null\n  }\n\n  render() {\n    const { activeUser } = this.state\n    return (\n      <div\n        className={`user-profile-sidebar ${\n          this.props.receiverProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"user-profile-header\">\n          <span\n            className=\"close-icon\"\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\n          >\n            <X size={24} />\n          </span>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img\n                src={activeUser !== null ? activeUser.photoURL : null}\n                alt={activeUser !== null ? activeUser.displayName : null}\n                height=\"66\"\n                width=\"66\"\n              />\n              <span\n                className={`${\n                  activeUser !== null && activeUser.status === \"do not disturb\"\n                    ? \"avatar-status-busy\"\n                    : activeUser !== null && activeUser.status === \"away\"\n                    ? \"avatar-status-away\"\n                    : activeUser !== null && activeUser.status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">\n              {activeUser !== null ? activeUser.displayName : null}\n            </h4>\n          </div>\n        </header>\n        <PerfectScrollbar\n          className=\"user-profile-sidebar-area p-2\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h6>About</h6>\n          <p>{activeUser !== null ? activeUser.about : null}</p>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nexport default ReceiverProfile\n","import React from \"react\"\nimport { X } from \"react-feather\"\nimport { Input } from \"reactstrap\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\nclass UserSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.chat.status !== state.status) {\n      return {\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    value:\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n    status: null\n  }\n\n  render() {\n    const status = this.state.status\n    return (\n      <div\n        className={`chat-profile-sidebar ${\n          this.props.userProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"chat-profile-header\">\n          <div\n            className=\"close-icon\"\n            onClick={() => this.props.handleUserSidebar(\"close\")}\n          >\n            <X size={24} />\n          </div>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\n              <span\n                className={`${\n                  status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : status === \"dnd\"\n                    ? \"avatar-status-busy\"\n                    : status === \"away\"\n                    ? \"avatar-status-away\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">John Doe</h4>\n          </div>\n        </header>\n        <div className=\"profile-sidebar-area\">\n          <PerfectScrollbar\n            className=\"scroll-area\"\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            <h6>About</h6>\n            <div className=\"about-user\">\n              <Input\n                type=\"textarea\"\n                name=\"text\"\n                id=\"userAbout\"\n                rows=\"5\"\n                value={this.state.value}\n                maxLength=\"120\"\n                onChange={e => this.setState({ value: e.target.value })}\n              />\n              <small className=\"counter-value float-right\">\n                {`${this.state.value.length} / 120`}\n              </small>\n            </div>\n            <h3 className=\"mt-3\">Status</h3>\n            <ul className=\"list-unstyled user-status mb-0\">\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Active\"\n                  color=\"success\"\n                  defaultChecked={true}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"active\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Do Not Disturb\"\n                  color=\"danger\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"dnd\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Away\"\n                  color=\"warning\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"away\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Offline\"\n                  color=\"secondary\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"offline\")}\n                />\n              </li>\n            </ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\n","import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport ChatSidebarContent from \"./ChatSidebar\"\nimport ChatLog from \"./ChatLog\"\nimport ReceiverSidebar from \"./receiverProfile\"\nimport UserSidebar from \"./UserSidebar\"\nimport \"../../../assets/scss/pages/app-chat.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass Chat extends React.Component {\n  state = {\n    userProfile: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    activeChatID: null,\n    activeChat: null,\n    activeUser: null,\n    receiverProfile: false,\n    userSidebar: false\n  }\n  // mounted = false\n  handleUserSidebar = status => {\n    if (status === \"open\") {\n      this.setState({\n        userProfile: true\n      })\n    } else {\n      this.setState({\n        userProfile: false\n      })\n    }\n  }\n  handleActiveChat = (id, user, chats) => {\n    this.setState({\n      activeChatID: id,\n      activeUser: user,\n      activeChat: chats\n    })\n  }\n\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleReceiverSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          receiverProfile: true\n        })\n      : this.setState({\n          receiverProfile: false\n        })\n  }\n\n  handleUserSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          userSidebar: true\n        })\n      : this.setState({\n          userSidebar: false\n        })\n  }\n\n  render() {\n    return (\n      <div className=\"chat-application position-relative\">\n        <div\n          className={`chat-overlay ${\n            this.state.receiverProfile ||\n            this.state.userSidebar ||\n            this.state.sidebarOpen\n              ? \"show\"\n              : \"d-none\"\n          }`}\n          onClick={() => {\n            this.handleReceiverSidebar(\"close\")\n            this.handleUserSidebar(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <ChatSidebarContent\n                  activeChatID={this.state.activeChatID}\n                  handleActiveChat={this.handleActiveChat}\n                  handleUserSidebar={this.handleUserSidebar}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              touch={false}\n              sidebarClassName=\"chat-sidebar\"\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <UserSidebar\n          userProfile={this.state.userSidebar}\n          handleUserSidebar={this.handleUserSidebar}\n        />\n        <ChatLog\n          activeChat={this.state.activeChat}\n          activeUser={this.state.activeUser}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n          mainSidebar={this.onSetSidebarOpen}\n          mql={mql}\n          handleActiveChat={this.handleActiveChat}\n        />\n        <ReceiverSidebar\n          activeUser={this.state.activeUser}\n          receiverProfile={this.state.receiverProfile}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chat\n"],"sourceRoot":""}