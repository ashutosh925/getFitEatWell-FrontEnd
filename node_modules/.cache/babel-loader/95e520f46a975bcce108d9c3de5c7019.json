{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport { history } from \"../../../history\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport { config } from \"../../../authServices/firebase/firebaseConfig\"; // Init firebase if not already initialized\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nlet firebaseAuth = firebase.auth();\nexport const signupWithFirebase = (email, password, name) => {\n  return dispatch => {\n    let userEmail = null,\n        loggedIn = false;\n    firebaseAuth.createUserWithEmailAndPassword(email, password).then(result => {\n      firebaseAuth.onAuthStateChanged(user => {\n        result.user.updateProfile({\n          displayName: name\n        });\n\n        if (user) {\n          userEmail = user.email; // let userName = user.displayName\n\n          loggedIn = true;\n          dispatch({\n            type: \"SIGNUP_WITH_EMAIL\",\n            payload: {\n              email: userEmail,\n              name,\n              isSignedIn: loggedIn\n            }\n          });\n          dispatch({\n            type: \"LOGIN_WITH_EMAIL\",\n            payload: {\n              email: userEmail,\n              name\n            }\n          });\n        }\n      });\n      history.push(\"/\");\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};\nexport const signupWithJWT = signupData => {\n  return dispatch => {\n    dispatch({\n      type: \"SIGNUP_WITH_EMAIL\",\n      payload: { ...signupData\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/roy/Desktop/Projects/getFit-frontEnd/src/redux/actions/auth/registerActions.js"],"names":["firebase","history","config","apps","length","initializeApp","firebaseAuth","auth","signupWithFirebase","email","password","name","dispatch","userEmail","loggedIn","createUserWithEmailAndPassword","then","result","onAuthStateChanged","user","updateProfile","displayName","type","payload","isSignedIn","push","catch","error","console","log","message","signupWithJWT","signupData"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,QAAuB,+CAAvB,C,CAEA;;AACA,IAAI,CAACF,QAAQ,CAACG,IAAT,CAAcC,MAAnB,EAA2B;AACzBJ,EAAAA,QAAQ,CAACK,aAAT,CAAuBH,MAAvB;AACD;;AAED,IAAII,YAAY,GAAGN,QAAQ,CAACO,IAAT,EAAnB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AAC3D,SAAOC,QAAQ,IAAI;AACjB,QAAIC,SAAS,GAAG,IAAhB;AAAA,QACEC,QAAQ,GAAG,KADb;AAGAR,IAAAA,YAAY,CACTS,8BADH,CACkCN,KADlC,EACyCC,QADzC,EAEGM,IAFH,CAEQC,MAAM,IAAI;AACdX,MAAAA,YAAY,CAACY,kBAAb,CAAgCC,IAAI,IAAI;AACtCF,QAAAA,MAAM,CAACE,IAAP,CAAYC,aAAZ,CAA0B;AACxBC,UAAAA,WAAW,EAAEV;AADW,SAA1B;;AAGA,YAAIQ,IAAJ,EAAU;AACRN,UAAAA,SAAS,GAAGM,IAAI,CAACV,KAAjB,CADQ,CAER;;AACAK,UAAAA,QAAQ,GAAG,IAAX;AACAF,UAAAA,QAAQ,CAAC;AACPU,YAAAA,IAAI,EAAE,mBADC;AAEPC,YAAAA,OAAO,EAAE;AACPd,cAAAA,KAAK,EAAEI,SADA;AAEPF,cAAAA,IAFO;AAGPa,cAAAA,UAAU,EAAEV;AAHL;AAFF,WAAD,CAAR;AAQAF,UAAAA,QAAQ,CAAC;AACPU,YAAAA,IAAI,EAAE,kBADC;AAEPC,YAAAA,OAAO,EAAE;AACPd,cAAAA,KAAK,EAAEI,SADA;AAEPF,cAAAA;AAFO;AAFF,WAAD,CAAR;AAOD;AACF,OAxBD;AAyBAV,MAAAA,OAAO,CAACwB,IAAR,CAAa,GAAb;AACD,KA7BH,EA8BGC,KA9BH,CA8BSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KAhCH;AAiCD,GArCD;AAsCD,CAvCM;AAyCP,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB;AAC3C,SAAOpB,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAE,mBADC;AAEPC,MAAAA,OAAO,EAAE,EAAC,GAAGS;AAAJ;AAFF,KAAD,CAAR;AAID,GALD;AAMD,CAPM","sourcesContent":["import * as firebase from \"firebase/app\"\nimport { history } from \"../../../history\"\nimport \"firebase/auth\"\nimport \"firebase/database\"\nimport { config } from \"../../../authServices/firebase/firebaseConfig\"\n\n// Init firebase if not already initialized\nif (!firebase.apps.length) {\n  firebase.initializeApp(config)\n}\n\nlet firebaseAuth = firebase.auth()\n\nexport const signupWithFirebase = (email, password, name) => {\n  return dispatch => {\n    let userEmail = null,\n      loggedIn = false\n\n    firebaseAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then(result => {\n        firebaseAuth.onAuthStateChanged(user => {\n          result.user.updateProfile({\n            displayName: name\n          })\n          if (user) {\n            userEmail = user.email\n            // let userName = user.displayName\n            loggedIn = true\n            dispatch({\n              type: \"SIGNUP_WITH_EMAIL\",\n              payload: {\n                email: userEmail,\n                name,\n                isSignedIn: loggedIn\n              }\n            })\n            dispatch({\n              type: \"LOGIN_WITH_EMAIL\",\n              payload: {\n                email: userEmail,\n                name\n              }\n            })\n          }\n        })\n        history.push(\"/\")\n      })\n      .catch(error => {\n        console.log(error.message)\n      })\n  }\n}\n\nexport const signupWithJWT = (signupData) => {\n  return dispatch => {\n    dispatch({\n      type: \"SIGNUP_WITH_EMAIL\",\n      payload: {...signupData}\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}