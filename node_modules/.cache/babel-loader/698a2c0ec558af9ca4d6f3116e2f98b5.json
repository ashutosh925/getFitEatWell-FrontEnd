{"ast":null,"code":"import*as firebase from\"firebase/app\";import{history}from\"../../../history\";import\"firebase/auth\";import\"firebase/database\";import axios from\"axios\";import{config}from\"../../../authServices/firebase/firebaseConfig\";// Init firebase if not already initialized\nif(!firebase.apps.length){firebase.initializeApp(config);}var firebaseAuth=firebase.auth();var base_url=\"http://localhost:2000\";export var loginWithFB=function loginWithFB(){return function(dispatch){var provider=new firebase.auth.FacebookAuthProvider();provider.setCustomParameters({display:\"popup\"});firebaseAuth.signInWithPopup(provider).then(function(result){// This gives you a Facebook Access Token. You can use it to access the Facebook API.\nvar token=result.credential.accessToken,// The signed-in user info.\nuser=result.user.email;dispatch({type:\"LOGIN_WITH_FB\",payload:{user:user,token:token,loggedInWith:\"firebase\"}});if(user)history.push(\"/\");}).catch(function(error){console.log(error);});};};export var loginWithTwitter=function loginWithTwitter(){return function(dispatch){var provider=new firebase.auth.TwitterAuthProvider();firebaseAuth.signInWithPopup(provider).then(function(result){var token=result.credential.accessToken,user=result.user.email,name=result.user.displayName,photoUrl=result.user.photoURL;dispatch({type:\"LOGIN_WITH_TWITTER\",payload:{user:user,name:name,photoUrl:photoUrl,token:token,loggedInWith:\"firebase\"}});history.push(\"/\");}).catch(function(error){console.log(error);});};};export var loginWithGoogle=function loginWithGoogle(){return function(dispatch){var provider=new firebase.auth.GoogleAuthProvider();firebaseAuth.signInWithPopup(provider).then(function(result){var token=result.credential.accessToken,user=result.user.email,name=result.user.displayName,photoUrl=result.user.photoURL;dispatch({type:\"LOGIN_WITH_GOOGLE\",payload:{email:user,name:name,photoUrl:photoUrl,token:token,loggedInWith:\"firebase\"}});history.push(\"/\");}).catch(function(error){console.log(error);});};};export var loginWithGithub=function loginWithGithub(){return function(dispatch){var provider=new firebase.auth.GithubAuthProvider();firebaseAuth.signInWithPopup(provider).then(function(result){var token=result.credential.accessToken,user=result.user.email,name=result.additionalUserInfo.username,photoUrl=result.user.photoURL;dispatch({type:\"LOGIN_WITH_GITHUB\",payload:{user:user,name:name,photoUrl:photoUrl,token:token,loggedInWith:\"firebase\"}});history.push(\"/\");}).catch(function(error){console.log(error);});};};export var loginWithJWT=function loginWithJWT(user){console.log('loginWithJWT',user);return user;};export var logoutWithJWT=function logoutWithJWT(){return function(dispatch){dispatch({type:\"LOGOUT_WITH_JWT\",payload:{}});history.push(\"/login\");};};export var logoutWithFirebase=function logoutWithFirebase(user){return function(dispatch){dispatch({type:\"LOGOUT_WITH_FIREBASE\",payload:{}});history.push(\"/login\");};};export var changeRole=function changeRole(role){return function(dispatch){return dispatch({type:\"CHANGE_ROLE\",userRole:role});};};","map":{"version":3,"sources":["/Users/roy/Desktop/Projects/getFit-frontEnd/src/redux/actions/auth/loginActions.js"],"names":["firebase","history","axios","config","apps","length","initializeApp","firebaseAuth","auth","base_url","loginWithFB","dispatch","provider","FacebookAuthProvider","setCustomParameters","display","signInWithPopup","then","result","token","credential","accessToken","user","email","type","payload","loggedInWith","push","catch","error","console","log","loginWithTwitter","TwitterAuthProvider","name","displayName","photoUrl","photoURL","loginWithGoogle","GoogleAuthProvider","loginWithGithub","GithubAuthProvider","additionalUserInfo","username","loginWithJWT","logoutWithJWT","logoutWithFirebase","changeRole","role","userRole"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\"\nimport { history } from \"../../../history\"\nimport \"firebase/auth\"\nimport \"firebase/database\"\nimport axios from \"axios\"\nimport { config } from \"../../../authServices/firebase/firebaseConfig\"\n\n// Init firebase if not already initialized\nif (!firebase.apps.length) {\n  firebase.initializeApp(config)\n}\n\nlet firebaseAuth = firebase.auth()\n\nconst base_url = \"http://localhost:2000\";\n\n\nexport const loginWithFB = () => {\n  return dispatch => {\n    let provider = new firebase.auth.FacebookAuthProvider()\n    provider.setCustomParameters({\n      display: \"popup\"\n    })\n    firebaseAuth\n      .signInWithPopup(provider)\n      .then(result => {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        let token = result.credential.accessToken,\n          // The signed-in user info.\n          user = result.user.email\n        dispatch({\n          type: \"LOGIN_WITH_FB\",\n          payload: {\n            user,\n            token,\n            loggedInWith: \"firebase\"\n          }\n        })\n        if (user) history.push(\"/\")\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n}\n\nexport const loginWithTwitter = () => {\n  return dispatch => {\n    let provider = new firebase.auth.TwitterAuthProvider()\n    firebaseAuth\n      .signInWithPopup(provider)\n      .then(function(result) {\n        let token = result.credential.accessToken,\n          user = result.user.email,\n          name = result.user.displayName,\n          photoUrl = result.user.photoURL\n        dispatch({\n          type: \"LOGIN_WITH_TWITTER\",\n          payload: {\n            user,\n            name,\n            photoUrl,\n            token,\n            loggedInWith: \"firebase\"\n          }\n        })\n        history.push(\"/\")\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n}\n\nexport const loginWithGoogle = () => {\n  return dispatch => {\n    let provider = new firebase.auth.GoogleAuthProvider()\n    firebaseAuth\n      .signInWithPopup(provider)\n      .then(function(result) {\n        let token = result.credential.accessToken,\n          user = result.user.email,\n          name = result.user.displayName,\n          photoUrl = result.user.photoURL\n        dispatch({\n          type: \"LOGIN_WITH_GOOGLE\",\n          payload: {\n            email: user,\n            name: name,\n            photoUrl,\n            token,\n            loggedInWith: \"firebase\"\n          }\n        })\n        history.push(\"/\")\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n}\n\nexport const loginWithGithub = () => {\n  return dispatch => {\n    let provider = new firebase.auth.GithubAuthProvider()\n    firebaseAuth\n      .signInWithPopup(provider)\n      .then(function(result) {\n        let token = result.credential.accessToken,\n          user = result.user.email,\n          name = result.additionalUserInfo.username,\n          photoUrl = result.user.photoURL\n\n        dispatch({\n          type: \"LOGIN_WITH_GITHUB\",\n          payload: {\n            user,\n            name,\n            photoUrl,\n            token,\n            loggedInWith: \"firebase\"\n          }\n        })\n        history.push(\"/\")\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n}\n\nexport const loginWithJWT = user => {\n  console.log('loginWithJWT',user)\n  return user;\n}\n\nexport const logoutWithJWT = () => {\n  return dispatch => {\n    dispatch({ type: \"LOGOUT_WITH_JWT\", payload: {} })\n    history.push(\"/login\")\n  }\n}\n\nexport const logoutWithFirebase = user => {\n  return dispatch => {\n    dispatch({ type: \"LOGOUT_WITH_FIREBASE\", payload: {} })\n    history.push(\"/login\")\n  }\n}\n\nexport const changeRole = role => {\n  return dispatch => dispatch({ type: \"CHANGE_ROLE\", userRole: role })\n}\n"]},"metadata":{},"sourceType":"module"}